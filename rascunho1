#include <stdio.h>

//algumas estruturas importantes 

typedef struct{
	char name[40];
	char cpf[11];
	char adress[50];
	char phone[11];
	char email[20];
	
	
}Guest; // stores guest info


typedef struct{
	char cep[14];
	char numero[5];
	char complemento[2];
	char logradouro[25];
	char bairro[30];
	char cidade[20];
	char uf[3];
}EndCompleto;

//sturcture aparte para adress, funcao para pedir dados do guest
//colocar condicao para limitacao para as variaveis do guest

//typedef struct{
//	int roomNumber;
//	char empty[1];
//	char taken[1];
//	char occupied[1];
//	guest *guestInfo; //is a pointer to the guest struct
//}rooms; 


#include <stdio.h>

void fConteudoMatriz(char matriz[20][14]);  
void fMapaOcupacao(char matriz[20][14]);
int fVerificaApartamento(char matriz[20][14], int andar, int apto);
void fReserva(char matriz[20][14]);
void fTaxaOcupacao(char matriz[20][14]);
void fCancelarReserva(char matriz[20][14]);
void fCheckIn(char matriz[20][14]);
void fcheckOut(char matriz[20][14]);
void fHospedeInfo(Guest *hospede);
void fclear();

int main(void) {
  char Tab[20][14];
  int opcao;
  fConteudoMatriz(Tab);
  
  Guest hospede;

  printf("Bem vindo ao Hotel Sweet Home!\n");
  do{
    printf("\n O que deseja fazer?\n");
    printf("1 - Verificar a ocupacao dos quartos\n");
    printf("2 - Reservar um quarto\n");
    printf("3 - Check-in de hospede\n");
    printf("4 - Check-out de hospede\n");
    printf("5 - Cancelar reserva\n");
    printf("6 - Metricas de ocupacao dos quartos\n");
    printf("7 - informacoes do hospede\n");
    printf("8 - Sair\n");
    scanf("%d", &opcao);

    switch(opcao){
      case 1:
        fMapaOcupacao(Tab);
        break;
      case 2:
        fReserva(Tab);
        break;
      case 3:
        fCheckIn(Tab);
        break;
      case 4:
        fcheckOut(Tab);
        break;
      case 5:
        fCancelarReserva(Tab);
        break;
      case 6:
        fTaxaOcupacao(Tab);
        break;
      case 7:
      	fHospedeInfo(&hospede);
      	break;
      case 8:
//        printf("n");
        break;
      default:
        printf("Opcao invalida. Tente novamente.\n");
    }
  } while(opcao != 8);

  return 0;
}

//Apresenta o mapa do hotel
void fConteudoMatriz(char matriz[20][14]) {
  for (int i = 0; i < 20; i++) {
    for (int j = 0; j < 14; j++)
      matriz[i][j] = '.';
  }
}

//Apresenta o mapa de ocupação do hotel, sinalizando o andar e o apartamento.
void fMapaOcupacao(char matriz[20][14]) {
  printf("Apartamentos ->\t\t");
  for (int j = 0; j < 14; j++)
    printf("%d\t", j + 1);
  printf("\n\n");

  for (int i = 0; i < 20; i++) {
    printf("Andar %d \t", (20 - i));
    for (int j = 0; j < 14; j++)
      printf("%c \t", matriz[i][j]);
    printf("\n");
  }
}


/* Verifica o status do apartamento. 
1 = reservado
2 = ocupado
3 = inválido 
4 = livre
*/

int fVerificaApartamento(char matriz[20][14], int andar, int apto) {
  int a = 20 - andar, b = apto - 1;

  if (matriz[a][b] == 'R')     
    return 1;

  if (matriz[a][b] == 'O')
    return 2;

  if ((b < 0 || b > 13) || (a < 0 || a > 19))
    return 3;

  return 4;
}


//Função para reservar um apartamento utilizando a função fVerificaApartamento para validação
void fReserva(char matriz[20][14]) {
  int status; //variável para receber o status do apartamento
  int a, b;
  
  do {
    
    printf("Escolha um andar(0 para sair): ");
    scanf("%d", &a);
    
    if( a == 0){
    	printf("Saindo do programa...\n");
    	break;
	}

    printf("Escolha um apartamento: ");
    scanf("%d", &b);

    status = fVerificaApartamento(matriz, a, b);

    if(status == 2 || status == 1) {
      printf("Apartamento ocupado. Tente outro\n");
      continue;
    }


    if (status == 4) {
      matriz[20 - a][b-1] = 'R';
      printf("Reserva realizada com sucesso\n"); 
       fMapaOcupacao(matriz);
      break;
    }

    if (status == 3)
      printf("Apartamento inexistente. ");
    printf("Tente outro\n");

  } while (status != 2 || status != 1); //Enquanto não for livre
}
//Realiza o check-in do hospode em um apartamento reservado ou em um não reservado
void fCheckIn(char matriz[20][14]){
    int status; 
    int a, b;
    int booked;

    do{
        printf("Voce ja reservou algum apartamento? (1-Sim e 0-Nao): ");
        scanf("%d", &booked);

        if (booked == 1) {
            printf("Nos diga o andar da reserva( 0 para sair): ");
            scanf("%d", &a);
            
             if( a == 0){
    			printf("Saindo do programa...\n");
    			break;
			}
			
            printf("Nos diga o quarto reservado: ");
            scanf("%d", &b);

            status = fVerificaApartamento(matriz, a, b);

            if (status == 1) {
                matriz[20-a][b-1] = 'O';
                printf("O check-in foi realizado com sucesso para o quarto %d no andar %d. Tenha uma boa estadia!\n", b, a);		   
                break;
            } else if (status == 3) {
                printf("O apartamento nao existe, por favor tente outro.\n");
            } else {
                printf("Apartamento nao esta' reservado. Tente outro.\n");
            }
        } else {
            printf("Digite um andar: ");
            scanf("%d", &a);
            printf("Digite um apartamento: ");
            scanf("%d", &b);

            status = fVerificaApartamento(matriz, a, b);

            if (status == 4) {
                matriz[20 - a][b - 1] = 'O';
                printf("O check-in foi realizado com sucesso para o quarto %d no andar %d. Tenha uma boa estadia!\n", b, a);
                break;
            } else if (status == 3) {
                printf("O apartamento nao existe, por favor tente outro.\n");
            } else {
                printf("Apartamento não esta' disponivel. Tente outro.\n");
            }
        }
    } while (1); //continua o loop até um check-in for realizado com sucesso
    fMapaOcupacao(matriz);
}
//Realiza o check-out do hospede, mudando a apresentação do mapa de ocupação do hotel 
void fcheckOut(char matriz[20][14]){
  int status, a, b;

  do{
    printf("Obrigada por escolher o nosso hotel! Para fazer o check-out precisamos de algumas informacoes: \n");

    printf("O Andar do apartamento que voce esta ocupando: ");
    scanf("%d", &a);

    printf("O quarto que voce estava ocupando: ");
    scanf("%d", &b);

    if(a == 0 || b == 0)
        break;
 

    if(status == 2){
      matriz[20-a][b-1] = '.';
        printf("O check-out foi realizado com sucesso para o quarto %d no andar %d!\n",b,a);		   
        break;
        }else if(status == 3){
        printf("O apartamento escolhido parece nao existir.Por favor, tente outro\n");
      }else if(status == 4){
        printf("O quarto escolhido ja estava livre. Por favor, tente outro\n");
    }
//		   }else if(status == 3){
//		   	printf("O apartamento escolhido nao existe. Por favor, tente outro");
//		   }
    }while(1);// enquanto o quarto escolhido existir
    fMapaOcupacao(matriz);
  }
//Cancela a reserva do hospede e retira a visualização do apartamento reservado ('R') 
void fCancelarReserva(char matriz[20][14]) {
  int status; //variável para receber o status do apartamento
  int a, b;

  do {

    printf("Escolha um andar: ");
    scanf("%d", &a);

    printf("Escolha um apartamento: ");
    scanf("%d", &b);

    if(a == 0 || b == 0)
      break;

    status = fVerificaApartamento(matriz, a, b);

    if(status == 2 || status == 4) { //se o quarto estiver livre ou ocupado não é possível cancelar a reserva
      printf("Operacao indisponivel para esse quarto. Tente outro (Digite 0 para cancelar a operacao)\n");
      continue;
    }


    if (status == 1) {
      matriz[20 - a][b-1] = '.';
      printf("A reserva do quarto %d do andar %d foi cancelada\n", a, b);
      break;
    }

    if (status == 3)
      printf("Apartamento inexistente. ");

    printf("Tente outro (Digite 0 para cancelar a operacao)\n");

  } while (status != 4 || (a != 0 || b != 0));  //Enquanto o status do quarto digitado não for "reservado" 
                                                //ou o usuário não digitar 0 para cancelar a operação
                                                
    fMapaOcupacao(matriz);
}

//nao é so isso aqui coloquei só o basico do basico obg
void fTaxaOcupacao(char matriz[20][14]){
  double contadorOcupado = 0;
  double contadorReservado = 0;

  for (int i = 0; i < 20; i++) {
    for (int j = 0; j < 14; j++)
      if(matriz[i][j] == 'R')
        contadorReservado++;
      else if(matriz[i][j] == 'O')
        contadorOcupado++;
  } 

 printf(" ----------------------------------------\n");
  printf("|%.2f%% dos apartamentos estao ocupados  |\n", (contadorOcupado/280)*100);
  printf("|%.2f%% dos apartamentos estao reservados|\n", (contadorReservado/280)*100);
  printf("|%.2f%% dos apartamentos estao livres  |\n",
    ((280-contadorReservado+contadorOcupado)/280)*100);
  printf("-----------------------------------------");

}

//typedef struct{
//	char name[70];
//	char cpf[12];
//	char adress[100];
//	char phone[15];
//	char email[70];
//	
//}guest; // stores guest info


void fHospedeInfo(Guest *hospede){
	printf("Antes de prosseguir, precisamos de algumas informacoes: \n\n");
	
	printf("Nome do hospede: ");
	gets(hospede -> name);
	fclear();
    
	printf("Celular do hospede: ");
	gets(hospede -> phone);

	printf("CPF do hospede: ");
	gets(hospede -> cpf);
	
	printf("Email do hospede: ");
	gets(hospede -> email);
	fclear();

}
void fclear(){//wipes off the buffer from the keyboard

    while(getchar() != '\n');
    
//	char carac;
//	while((carac = fgetc(stdin)) != EOF && carac != '\n'){}
}

